<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Core;assembly=Core"
    xmlns:base="clr-namespace:AtomicTorch.GameEngine.Common.Client.MonoGame.UI;assembly=AtomicTorch.CBND.GameApi.WPF.Stubs"
    xmlns:helpers="clr-namespace:CryoFall.Marketplace.UI.Helpers"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:controls="clr-namespace:CryoFall.Marketplace.UI.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/UI/Styles/DefaultStyles.xaml" />
        <ResourceDictionary Source="/UI/Styles/SpecialItemsPanel.xaml" />
        <ResourceDictionary Source="/UI/Styles/ItemControlsStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Button Styles -->
    <Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Foreground" Value="#CCFFFFFF" />
        <Setter Property="Background" Value="#66666666" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="#66666666" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundMouseOverHighlight}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundPressedHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Styles -->
    <Style x:Key="RefreshButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Width" Value="70" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="5, 0, 5, 0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <!-- Button Styles -->
    <Style x:Key="MarketButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Foreground" Value="#CCFFFFFF" />
        <Setter Property="Background" Value="#66666666" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="Width" Value="70" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Margin" Value="0, 0, 0, 0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="#66666666" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundMouseOverHighlight}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource ButtonSmallBackgroundPressedHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Styles -->
    <Style x:Key="ButtonTitle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundButtonMouseClick}" />
        <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundButtonMouseEnter}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Height" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{StaticResource CondensedFontFamily}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderNormal}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{StaticResource ControlCornerRadius}">
                        <Border x:Name="BackgroundHighlight">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="BackgroundHighlight" Property="Background"
                                    Value="{StaticResource ButtonBackgroundMouseOverHighlight}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{StaticResource ButtonBorderMouseOver}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundActive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBlock Styles -->   
    <Style x:Key="ItemsControlTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="10,0,0,0" />
    </Style>

    <!-- Panel Styles -->
    <Style x:Key="BottomPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Margin" Value="0,0,3,2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource BrushColorAlt3}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="10" />
            </Style>
        </Style.Resources>
    </Style>
    
</ResourceDictionary>